name: Deploy Laravel QA

on:
  push:
    branches: [ Qa ]
  workflow_dispatch: {}

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      EC2_HOST: ${{ vars.EC2_HOST }}
      EC2_USER: ${{ vars.EC2_USER }}
      APP_DIR: ${{ vars.APP_DIR }}
      PHP_VERSION: ${{ vars.PHP_VERSION }}
      SSH_PORT: ${{ secrets.SSH_PORT || 22 }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          tools: composer

      - name: Install dependencies
        run: composer install --prefer-dist --no-interaction

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Deploy to EC2
  run: |
    set -e
    : "${APP_DIR:?APP_DIR is not set}"   # hard fail if empty

    # create the archive outside the working tree to avoid self-inclusion
    TAR=/tmp/app.tar.gz
    tar -czf "$TAR" \
      --exclude=.git \
      --exclude=.github \
      --exclude=node_modules \
      --exclude=vendor \
      --exclude=storage/logs/* \
      --exclude=storage/framework/cache/data/* \
      .

    scp -P $SSH_PORT -o StrictHostKeyChecking=no "$TAR" $EC2_USER@$EC2_HOST:/tmp/app.tar.gz
    rm -f "$TAR"

    ssh -p $SSH_PORT -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << 'EOF'
    set -e
    APP_DIR="${APP_DIR}"
    PHP_VERSION="${PHP_VERSION}"

    sudo mkdir -p "$APP_DIR"
    # keep .env & storage if present
    [ -f "$APP_DIR/.env" ] && mv "$APP_DIR/.env" /tmp/.env.keep || true
    [ -d "$APP_DIR/storage" ] && mv "$APP_DIR/storage" /tmp/storage.keep || true

    sudo rm -rf "$APP_DIR"/*
    sudo tar -xzf /tmp/app.tar.gz -C "$APP_DIR"
    sudo rm -f /tmp/app.tar.gz

    [ -f /tmp/.env.keep ] && sudo mv /tmp/.env.keep "$APP_DIR/.env" || true
    [ -d /tmp/storage.keep ] && sudo mv /tmp/storage.keep "$APP_DIR/storage" || sudo mkdir -p "$APP_DIR/storage"

    cd "$APP_DIR"
    composer install --no-dev --prefer-dist --optimize-autoloader --no-interaction
    php artisan migrate --force || true
    php artisan config:cache || true
    php artisan route:cache || true
    php artisan view:cache || true

    sudo systemctl reload php${PHP_VERSION}-fpm || true
    sudo nginx -t && sudo systemctl reload nginx || true
    EOF
